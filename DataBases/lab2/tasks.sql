-- 1 task✓
-- Сделать запрос для получения атрибутов из указанных таблиц, применив фильтры по указанным условиям:
-- Таблицы: Н_ОЦЕНКИ, Н_ВЕДОМОСТИ.
-- Вывести атрибуты: Н_ОЦЕНКИ.ПРИМЕЧАНИЕ, Н_ВЕДОМОСТИ.ДАТА.
-- Фильтры (and):
-- a) Н_ОЦЕНКИ.КОД = незач.
-- b) Н_ВЕДОМОСТИ.ЧЛВК_ИД > 105590.
-- c) Н_ВЕДОМОСТИ.ЧЛВК_ИД = 142390.
-- Вид соединения: RIGHT join.

select "Н_ОЦЕНКИ"."ПРИМЕЧАНИЕ", "Н_ВЕДОМОСТИ"."ДАТА"
from "Н_ОЦЕНКИ"
right join "Н_ВЕДОМОСТИ" on "Н_ВЕДОМОСТИ"."ОЦЕНКА" = "Н_ОЦЕНКИ"."КОД"
where "Н_ОЦЕНКИ"."КОД" = 'незач' and
      "Н_ВЕДОМОСТИ"."ЧЛВК_ИД" > 105590 and
      "Н_ВЕДОМОСТИ"."ЧЛВК_ИД" = 142390

--чтобы отображалось что-нибудь:
select "Н_ОЦЕНКИ"."ПРИМЕЧАНИЕ", "Н_ВЕДОМОСТИ"."ДАТА"
from "Н_ОЦЕНКИ"
right join "Н_ВЕДОМОСТИ" on "Н_ВЕДОМОСТИ"."ОЦЕНКА" = "Н_ОЦЕНКИ"."КОД"
where "Н_ОЦЕНКИ"."КОД" = 'незач' and
      "Н_ВЕДОМОСТИ"."ЧЛВК_ИД" > 105590 and
      "Н_ВЕДОМОСТИ"."ЧЛВК_ИД" = 137767

-- 2 task✓

-- Сделать запрос для получения атрибутов из указанных таблиц, 
--применив фильтры по указанным условиям:
-- Таблицы: Н_ЛЮДИ, Н_ВЕДОМОСТИ, Н_СЕССИЯ.
-- Вывести атрибуты: Н_ЛЮДИ.ОТЧЕСТВО, Н_ВЕДОМОСТИ.ДАТА, Н_СЕССИЯ.ЧЛВК_ИД.
-- Фильтры (and):
-- a) Н_ЛЮДИ.ИД < 152862.
-- b) Н_ВЕДОМОСТИ.ИД > 1250981.
-- Вид соединения: join.

select a."ОТЧЕСТВО", b."ДАТА", c."ЧЛВК_ИД"
from "Н_ЛЮДИ" a
join "Н_ВЕДОМОСТИ" b on a."ИД" = b."ЧЛВК_ИД"
join "Н_СЕССИЯ" c on a."ИД" = c."ЧЛВК_ИД"
where a."ИД" < 152862 and b."ИД" > 1250981

-- чтобы отображалось что-нибудь:
select a."ОТЧЕСТВО", b."ДАТА", c."ЧЛВК_ИД"
from "Н_ЛЮДИ" a
join "Н_ВЕДОМОСТИ" b on a."ИД" = b."ЧЛВК_ИД"
join "Н_СЕССИЯ" c on a."ИД" = c."ЧЛВК_ИД"
where a."ИД" < 152862 and b."ИД" > 125981

-- 3 task✓

-- Вывести число студентов вечерней формы обучения, которые старше 25 лет.
-- Ответ должен содержать только одно число. (сделать с подзапросами без join)
select count(b."ИМЯ")
from "Н_УЧЕНИКИ" a
join "Н_ЛЮДИ" b on a."ЧЛВК_ИД" = b."ИД"
join "Н_ПЛАНЫ" c on c."ИД" = a."ПЛАН_ИД"
join "Н_ФОРМЫ_ОБУЧЕНИЯ" d on d."ИД" = c."ФО_ИД"
where d."НАИМЕНОВАНИЕ" = 'Очно-заочная(вечерняя)' and
      AGE(CURRENT_DATE, b."ДАТА_РОЖДЕНИЯ") >= INTERVAL '25 years';
-- ответ: 935
-- С подзапросами без join:
SELECT COUNT(*)
FROM "Н_УЧЕНИКИ"
WHERE "ПЛАН_ИД" IN (
    SELECT "ИД"
    FROM "Н_ПЛАНЫ"
    WHERE "ФО_ИД" IN (
        SELECT "ИД"
        FROM "Н_ФОРМЫ_ОБУЧЕНИЯ"
        WHERE "НАИМЕНОВАНИЕ" = 'Очно-заочная(вечерняя)'
    )
)
AND "ЧЛВК_ИД" IN (
    SELECT "ИД"
    FROM "Н_ЛЮДИ"
    WHERE AGE(CURRENT_DATE, "ДАТА_РОЖДЕНИЯ") >= INTERVAL '25 years'
);


-- 4 task✓
-- В таблице Н_ГРУППЫ_ПЛАНОВ найти номера планов, по которым обучается
-- (обучалось) менее 2 групп на кафедре вычислительной техники.
-- Для реализации использовать подзапрос.

select a."ПЛАН_ИД", count(*)
from "Н_ГРУППЫ_ПЛАНОВ" a
where "ПЛАН_ИД" in (select b."ИД" from "Н_ПЛАНЫ" b
            join "Н_ОТДЕЛЫ" c on c."ИД" = b."ОТД_ИД"
            where c."КОРОТКОЕ_ИМЯ"='ВТ')
group by a."ПЛАН_ИД"
having count(*) < 2

-- чтобы выводилось хотя бы что-то:
select a."ПЛАН_ИД", count(*)
from "Н_ГРУППЫ_ПЛАНОВ" a
where "ПЛАН_ИД" in (select b."ИД" from "Н_ПЛАНЫ" b
            join "Н_ОТДЕЛЫ" c on c."ИД" = b."ОТД_ИД"
            where c."КОРОТКОЕ_ИМЯ"='КТиУ')
group by a."ПЛАН_ИД"
having count(*) < 2


-- 5 task✓
-- Выведите таблицу со средними оценками студентов группы 4100 (Номер, ФИО, Ср_оценка),
-- у которых средняя оценка равна максимальной оценк(е|и) в группе 3100. Добавить вывод среднего возраста

select "Н_УЧЕНИКИ"."ИД",
   	"Н_ЛЮДИ"."ФАМИЛИЯ",
   	"Н_ЛЮДИ"."ИМЯ",
   	"Н_ЛЮДИ"."ОТЧЕСТВО",
   	round(AVG(CAST("Н_ВЕДОМОСТИ"."ОЦЕНКА" as INT)), 2) as "СР_ОЦЕНКА"
from "Н_УЧЕНИКИ"
     	join "Н_ЛЮДИ" on "Н_УЧЕНИКИ"."ЧЛВК_ИД" = "Н_ЛЮДИ"."ИД"
     	left join "Н_ВЕДОМОСТИ" on "Н_УЧЕНИКИ"."ЧЛВК_ИД" = "Н_ВЕДОМОСТИ"."ЧЛВК_ИД"
where "Н_УЧЕНИКИ"."ГРУППА" = '4100' and "Н_ВЕДОМОСТИ"."ОЦЕНКА" ~ '^[0-5]$'
group by "Н_УЧЕНИКИ"."ИД", "Н_ЛЮДИ"."ФАМИЛИЯ", "Н_ЛЮДИ"."ИМЯ", "Н_ЛЮДИ"."ОТЧЕСТВО"
having round(AVG(CAST("Н_ВЕДОМОСТИ"."ОЦЕНКА" as INT)), 2) =
   	round((select MAX(CAST("Н_ВЕДОМОСТИ"."ОЦЕНКА" as INT))
          	from "Н_УЧЕНИКИ"
                   	join "Н_ВЕДОМОСТИ" on "Н_УЧЕНИКИ"."ЧЛВК_ИД" = "Н_ВЕДОМОСТИ"."ЧЛВК_ИД"
          	where "Н_УЧЕНИКИ"."ГРУППА" = '3100'
            	and "Н_ВЕДОМОСТИ"."ОЦЕНКА" ~ '^[2-5]$'), 2);

-- вывод среднего возраста студентов из групп 4100 и 3100
SELECT
  "Н_УЧЕНИКИ"."ГРУППА",
  ROUND(AVG(EXTRACT(EPOCH FROM AGE(CURRENT_DATE, "Н_ЛЮДИ"."ДАТА_РОЖДЕНИЯ")) / (365.25 * 24 * 60 * 60)), 2) AS "СР_ВОЗРАСТ"
FROM "Н_УЧЕНИКИ"
  JOIN "Н_ЛЮДИ" ON "Н_УЧЕНИКИ"."ЧЛВК_ИД" = "Н_ЛЮДИ"."ИД"
WHERE "Н_УЧЕНИКИ"."ГРУППА" IN ('4100', '3100')
GROUP BY "Н_УЧЕНИКИ"."ГРУППА";
-- чтобы выводилось хотя бы что-то:
select "Н_УЧЕНИКИ"."ИД",
   	"Н_ЛЮДИ"."ФАМИЛИЯ",
   	"Н_ЛЮДИ"."ИМЯ",
   	"Н_ЛЮДИ"."ОТЧЕСТВО",
   	round(AVG(CAST("Н_ВЕДОМОСТИ"."ОЦЕНКА" as INT)), 2) as "СР_ОЦЕНКА"
from "Н_УЧЕНИКИ"
     	join "Н_ЛЮДИ" on "Н_УЧЕНИКИ"."ЧЛВК_ИД" = "Н_ЛЮДИ"."ИД"
     	left join "Н_ВЕДОМОСТИ" on "Н_УЧЕНИКИ"."ЧЛВК_ИД" = "Н_ВЕДОМОСТИ"."ЧЛВК_ИД"
where "Н_УЧЕНИКИ"."ГРУППА" = '4100' and "Н_ВЕДОМОСТИ"."ОЦЕНКА" ~ '^[0-5]$'
group by "Н_УЧЕНИКИ"."ИД", "Н_ЛЮДИ"."ФАМИЛИЯ", "Н_ЛЮДИ"."ИМЯ", "Н_ЛЮДИ"."ОТЧЕСТВО"
having round(AVG(CAST("Н_ВЕДОМОСТИ"."ОЦЕНКА" as INT)), 2) <
   	round((select MAX(CAST("Н_ВЕДОМОСТИ"."ОЦЕНКА" as INT))
          	from "Н_УЧЕНИКИ"
                   	join "Н_ВЕДОМОСТИ" on "Н_УЧЕНИКИ"."ЧЛВК_ИД" = "Н_ВЕДОМОСТИ"."ЧЛВК_ИД"
          	where "Н_УЧЕНИКИ"."ГРУППА" = '3100'
            	and "Н_ВЕДОМОСТИ"."ОЦЕНКА" ~ '^[2-5]$'), 2);


--6 task✓
-- Получить список студентов, зачисленных после первого сентября 2012 года 
--на первый курс очной или заочной формы обучения. В результат включить:
-- номер группы;
-- номер, фамилию, имя и отчество студента;
-- номер и состояние пункта приказа;
-- Для реализации использовать соединение таблиц. 

--вместо or сделать in:

select "Н_УЧЕНИКИ"."ГРУППА",
       "Н_УЧЕНИКИ"."ИД",
       "Н_ЛЮДИ"."ФАМИЛИЯ",
       "Н_ЛЮДИ"."ИМЯ",
       "Н_ЛЮДИ"."ОТЧЕСТВО",
       "Н_УЧЕНИКИ"."П_ПРКОК_ИД",
       "Н_УЧЕНИКИ"."СОСТОЯНИЕ"
from "Н_УЧЕНИКИ"
  join "Н_ЛЮДИ" on "Н_ЛЮДИ"."ИД" = "Н_УЧЕНИКИ"."ЧЛВК_ИД"
  join "Н_ПЛАНЫ" on "Н_УЧЕНИКИ"."ПЛАН_ИД" = "Н_ПЛАНЫ"."ИД"
  join "Н_ФОРМЫ_ОБУЧЕНИЯ" on "Н_ПЛАНЫ"."ФО_ИД" = "Н_ФОРМЫ_ОБУЧЕНИЯ"."ИД"
    and "Н_ФОРМЫ_ОБУЧЕНИЯ"."НАИМЕНОВАНИЕ" in ('Заочная', 'Очная')
where "Н_УЧЕНИКИ"."ПРИЗНАК" = 'обучен'
  and "Н_УЧЕНИКИ"."СОСТОЯНИЕ" = 'утвержден'
  and DATE("Н_УЧЕНИКИ"."НАЧАЛО") > '2012-09-01';



--7 task
-- Вывести список людей, не являющихся или не являвшихся студентами
-- СПбГУ ИТМО (данные, о которых отсутствуют в таблице Н_УЧЕНИКИ). 
-- В запросе нельзя использовать DISTINCT.

SELECT "Н_ЛЮДИ"."ИМЯ", "Н_ЛЮДИ"."ФАМИЛИЯ"
FROM "Н_ЛЮДИ"
WHERE "Н_ЛЮДИ"."ИД" NOT IN (
  SELECT "ЧЛВК_ИД"
  FROM "Н_УЧЕНИКИ"
)
GROUP BY "Н_ЛЮДИ"."ИМЯ", "Н_ЛЮДИ"."ФАМИЛИЯ";
